# Generated by vmake version 2.2

# Define path to each library
LIB_MODELSIM = modelsim

# Define path to each design unit
MODELSIM__WindowPointer = $(LIB_MODELSIM)/@window@pointer/_primary.dat
MODELSIM__StatusRegister = $(LIB_MODELSIM)/@status@register/_primary.dat
MODELSIM__SayehTest = $(LIB_MODELSIM)/@sayeh@test/_primary.dat
MODELSIM__Sayeh = $(LIB_MODELSIM)/@sayeh/_primary.dat
MODELSIM__RegisterFile = $(LIB_MODELSIM)/@register@file/_primary.dat
MODELSIM__ProgramCounter = $(LIB_MODELSIM)/@program@counter/_primary.dat
MODELSIM__MemIP = $(LIB_MODELSIM)/@mem@i@p/_primary.dat
MODELSIM__InstructionRegister = $(LIB_MODELSIM)/@instruction@register/_primary.dat
MODELSIM__DataPath = $(LIB_MODELSIM)/@data@path/_primary.dat
MODELSIM__controller = $(LIB_MODELSIM)/controller/_primary.dat
MODELSIM__ArithmeticUnit = $(LIB_MODELSIM)/@arithmetic@unit/_primary.dat
MODELSIM__AddressLogic = $(LIB_MODELSIM)/@address@logic/_primary.dat
MODELSIM__AddressingUnit = $(LIB_MODELSIM)/@addressing@unit/_primary.dat
VCOM = vcom
VLOG = vlog
VOPT = vopt
SCCOM = sccom
VSIM = vsim
VLIB = vlib

all: vsim_run

whole_library :     $(MODELSIM__WindowPointer) \
    $(MODELSIM__StatusRegister) \
    $(MODELSIM__SayehTest) \
    $(MODELSIM__Sayeh) \
    $(MODELSIM__RegisterFile) \
    $(MODELSIM__ProgramCounter) \
    $(MODELSIM__MemIP) \
    $(MODELSIM__InstructionRegister) \
    $(MODELSIM__DataPath) \
    $(MODELSIM__controller) \
    $(MODELSIM__ArithmeticUnit) \
    $(MODELSIM__AddressLogic) \
    $(MODELSIM__AddressingUnit)

$(MODELSIM__AddressingUnit) \
$(MODELSIM__AddressLogic) \
$(MODELSIM__ArithmeticUnit) \
$(MODELSIM__controller) \
$(MODELSIM__DataPath) \
$(MODELSIM__InstructionRegister) \
$(MODELSIM__MemIP) \
$(MODELSIM__ProgramCounter) \
$(MODELSIM__RegisterFile) \
$(MODELSIM__Sayeh) \
$(MODELSIM__SayehTest) \
$(MODELSIM__StatusRegister) \
$(MODELSIM__WindowPointer) : WindowPointer.v StatusRegister.v Sayeh_Test.v \
		 Sayeh.v RegisterFile.v ProgramCounter.v MemIP.v \
		 InstructionRegister.v DataPath.v controller.v \
		 ArithmeticUnit.v AddressLogic.v AddressingUnit.v


modelsim_clean:
	rm -rf $(LIB_MODELSIM) modelsim.ini

modelsim_lib:
	$(VLIB) $(LIB_MODELSIM)
	vmap work $(LIB_MODELSIM)

COMPILE_FLAGS=

modelsim_compile:
	$(VLOG) $(COMPILE_FLAGS) -work work -L mtiAvm -L mtiOvm \
		 -L mtiUvm -L mtiUPF WindowPointer.v StatusRegister.v \
		 Sayeh_Test.v Sayeh.v RegisterFile.v ProgramCounter.v \
		 MemIP.v InstructionRegister.v DataPath.v controller.v \
		 ArithmeticUnit.v AddressLogic.v AddressingUnit.v

vsim_run: modelsim_lib modelsim_compile
	$(VSIM) -novopt -lib work -pli sayeh_pli.so  SayehTest -do "do wave.do; do sayeh.do"

vsim: modelsim_lib modelsim_compile
	@make vsim_sim

vsim_sim:
	$(VSIM) -c -vopt -quiet -pli sayeh_pli.so -lib work  SayehTest -do "do sayeh.do; quit"

vsim_sub_fault: 
	make COMPILE_FLAGS="+define+SUBMODULE_FAULT +define+num_faults=$(NUM_FAULTS) +define+submodule_index=$(SUBMODULE)" modelsim_compile
	@make vsim_sim

vsim_main_fault:
	make COMPILE_FLAGS="+define+MAIN_FAULT +define+num_faults=$(NUM_FAULTS)" modelsim_compile
	@make vsim_sim
sw:
	../Sayeh\ Assembler/sasm.py ../Sayeh\ Assembler/sayeh.asm SayehRAM.hex
	cat SayehRAM.hex x.hex outputs.hex >out.hex	
